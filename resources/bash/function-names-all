#!/bin/bash
# Adopted of clang-format-all: a tool to run clang-format on an entire project
# Copyright (C) 2016 Evan Klitzke <evan@eklitzke.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

function usage {
    echo "Usage: $0 DIR..."
    exit 1
}
if [ $# -eq 0 ]; then
    usage
fi

# Variable that will hold the name of the clang-format command
FMT="functionnames"

# Check all of the arguments first to make sure they're all directories
for dir in "$@"; do
    if [ ! -d "${dir}" ]; then
        echo "${dir} is not a directory"
        usage
    fi
done


qtInclude=$(dirname $(find /usr/include -name qobject.h -print -quit))
qtInclude=$(dirname $qtInclude)

echo "Using Qt $qtInclude"

for dir in "$@"; do
    pushd "${dir}"
    EXIT=0
    for f in $(find main/cpp test/cpp \
                  -name '*.h' \
                  -o -name '*.hh' \
                  -o -name '*.hpp' | grep -v ".*immunity/Immunizer.h" | grep -v "behaviour" | grep -v "SegmentedVector" | grep -v "GeoAggregator.h" | grep -v "GeoGrid.h"); do
        echo $f
        "${FMT}" -I `pwd`/main/cpp  -I `pwd`/main/resources/lib/spdlog/include -I `pwd`/main/resources/lib/randutils/include -I `pwd`/main/resources/lib/date/include -I `pwd`/main/resources/lib/protobuf -I `pwd`/main/resources/lib/pcg/include -I `pwd`/main/resources/lib/trng-4.20/include -I $qtInclude/QtWidgets -I $qtInclude/QtCore/ -I $qtInclude/ -D __PIC__ ${f}
        if [ $? -ne 0 ]; then
           EXIT=1
        fi
    done
    popd
done

exit $EXIT
