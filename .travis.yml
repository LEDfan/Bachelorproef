# This .travis.yml on:
# https://github.com/loot/loot/blob/dev/.travis.yml
# https://genbattle.bitbucket.io/blog/2016/01/17/c++-travis-ci/?

language: cpp
dist: trusty

notifications:
    webhooks:
        secure: "IOa3ajectkRNTnMOqWLNo/6xxWmlpLlzcGlmmhm8Hz5ZyooqHZ/+IApIqaR3xCpbh3SVDGttAOBRDCF9QTNifYPElgOQzpXLEm90p8ekmoud18cLrrViLAJO9En83Rw0hBl4uYBsCx7PJQwy3yxuHC05oRE4nW+xAt1Tj+P687uC60yu9fOJw0P9l/8YP2YBeT02WJ6cq4zmv5ru7AR+b0sRLQWykPFgMaiu1uffb6nMB9mGqtsYhUkj+KVDi3LQxBpJ59UP/un1Z2cPhgTP1GsYHZtgw4gBW8Dtz+aql0KmjlzEGK5IsmNTm3wz/FxFy2CAZ5CbEqyTi/6mL/hHOwJUMG/dpN1AE7P1lY8espEd9yefniKu5ctSq3mcxZ0EknMYg8gMPYyEn4DLzIYZyMe7xBi6xv12wlH887mKCshlDhfi18iX7VmmR1ERLtbZ+na10LtW/1laTaz43HpAM7zMGz0VQc2XUA4MO7nt9l8CvpV2kNiy0Ek8gdqAo4pTNoEL661JKVrOhYPsfeowNAED2TMIDKPLflJzmfbrCX1tFe6JIiXfPBB0Zc+Ez5hX2hC+8KZQmKVRZY0HkVPnAswu/+htYNuS00QVVYzgisFvvEAwuzPtx7LzBSdA3+0AsQLgDvGyCyhNvyEBiXF9zjSZ25SzFbAEjZ8YJxCwXXE="

env:
  global:
    #- MAKEFLAGS="-j 2"
    - secure: GleA4sdouIha5p6DQJ0YNPXWORcDWLAyDqFhYFV1OXSfzR1KublRtuH4MCPsYkgxujas2uqRU4bM0RGuws5JMAFTsVKpQv8hZZAhzZu6tdHY3d5adC19hu5AKKkd96wOCZbU8D/FxUpVkqALQ1wAQpxa2KFlqsPT9Wk9Uqt+xEZ4Wp1aBa8eo8E9Llra1KPAQq8S3ljTs4VH2j9ID1xW/VQfXILcFtw2pvpmtdxrGYPOaJwxxvq66Tfc/yFX3BEhtzdykJBrI7COzrE59VZVGOi/Pteb5a6V/TOw7bFUkov6siB16/IIOSpVN9fGcnNPzD5Ll7dlz2yIlIK/HgRRb6GpsppGnZzVUyNBieDI4oV0qUL3zBWo3a0Y5k9mcR8KwOuaHsuaW0816mFuFiPf8Jkrnf+ruYsJKWZ+F4XqXyuDbiwBLNcmCVNk0T9IE0DrZdrG59SKvthmdGhQE2w1MPsRe7dQcaT7/1/YRL2C0kJN3NMcSFjXN53nDWx5q/TMA6YlQtTxRVO1Pl4ldKHbFO8ZJl0YHzkY0DAfYUmnLxEUwLe2LrMFemh9U2bWBg3zUif1We1pmhjHldrEi1drEkfTjBNHESN9CR7GG5mT8L1px+RrIumxr1XjaK/59twiFYqsFqk4widskpSkYKRZGpR9N8gl56ieyV61Ual2mPg=

cache:
  directories:
    - $HOME/.ccache
    - $HOME/deps

addons:
  apt:
    sources: &default_sources
      - ubuntu-toolchain-r-test
    packages: &default_packages
      - libhdf5-dev

matrix:
  include:

    - os: linux
      compiler: gcc
      env: CXX_COMPILER_NAME='g++-6' CXX_COMPILER_ID=GNU STRIDE_GENERATE_COVERAGE=True BUILD_NAME="linux-gcc-6"
      addons: { apt: { packages: [*default_packages, g++-6, lcov], sources: [*default_sources]} }

    - os: linux
      compiler: gcc
      env: CXX_COMPILER_NAME='g++-7' CXX_COMPILER_ID=GNU BUILD_NAME="linux-gcc-7"
      addons: { apt: { packages: [*default_packages, g++-7], sources: [*default_sources]} }

    - os: linux
      compiler: clang
      env: CXX_COMPILER_NAME='clang++-5.0' CXX_COMPILER_ID=CLANG BUILD_NAME="linux-clang-5"
      addons: { apt: { packages: [*default_packages, clang-5.0, g++-6, gcc-6], sources:  [*default_sources, llvm-toolchain-trusty-5.0] } }

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX_COMPILER_NAME='c++' CXX_COMPILER_ID=APPLE BUILD_NAME="osx-8.3-apple-clang"

    - os: osx
      osx_image: xcode9.2
      compiler: clang
      env: CXX_COMPILER_NAME='c++' CXX_COMPILER_ID=APPLE BUILD_NAME="osx-9.2-apple-clang"

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX_COMPILER_NAME='clang++' CXX_COMPILER_ID=LLVM BUILD_NAME="osx-8.3-llvm-clang"

before_install:
  # Check commit matches expected commit (because of Travis bug)
  - if [[ "$TRAVIS_COMMIT" != "$(git rev-parse HEAD)" ]]; then echo "Commit $(git rev-parse HEAD) doesn't match expected commit $TRAVIS_COMMIT"; fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$CXX_COMPILER_ID" == "LLVM" ]]; then
      brew install --with-clang llvm@6
      brew link --force --overwrite llvm@6
    fi
  # This is required to override Travis's definitions of CC and CXX that lead to old Ubuntu-packaged compilers
  - export CXX="$CXX_COMPILER_NAME"

install:
    #--------- Linux
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        wget -O swig.deb https://c.ledfan.be/s/eXQ5LW4yTxTYwja/download;
        sudo dpkg -i swig.deb;
        sudo apt-get -y remove qtchooser;
        wget -O qt.deb https://c.ledfan.be/s/ZJDRPiFrrtWHC3F/download;
        sudo dpkg -i qt.deb;
    fi
    #--------- OSX
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew upgrade python cmake
      brew install ccache swig qt;
      brew link --force qt;
      sudo ln -s /usr/local/Cellar/qt/5.10.1/plugins /usr/local/plugins;
      sudo ln -s /usr/local/Cellar/qt/5.10.1/mkspecs/ /usr/local/mkspecs;
      export CMAKE_PREFIX_PATH=/usr/local/Cellar/qt5/5.10.1/;
    fi
    #--------- All platforms
  - |
    export BOOSTHOME=$HOME/deps/boost_1_66_0
    if [[ -z "$(ls -A $BOOSTHOME)" ]]; then
      cd /tmp/
      wget -O boost_1_66_0.tar.gz https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz -q
      tar xf boost_1_66_0.tar.gz > /dev/null 2>&1
      cd boost_1_66_0/
      # Configure & build  --prefix: install dir for boost  --with-libraries: only build libraries that we actually need
      ./bootstrap.sh --prefix=$BOOSTHOME --with-libraries=chrono,date_time,filesystem,iostreams,locale,regex,system,thread
      ./b2 -q -a -j2 -d0 --disable-filesystem2 cxxflags="-v -std=c++11" threading=multi install
      cd $TRAVIS_BUILD_DIR;
    else
      echo "Already have boost cache"
    fi
    export LD_LIBRARY_PATH=$BOOSTHOME/lib:$LD_LIBRARY_PATH
    sudo rm -f /usr/local/lib/libboost*.dylib*
    sudo ln -s $BOOSTHOME/lib/*.{so,dylib}* /usr/local/lib

script:
  # Build stride and run tests
  #         CMAKE_BUILD_TYPE: enable assertions
  #         STRIDE_GENERATE_COVERAGE: enable coverage -- set in `matrix`
  #			STRIDE_BOOST_ROOT: specify where the correct version of boost can be found
  #			STRIDE_BOOST_NO_SYSTEM_PATHS: should be ON to prevent mixing different versions of boost
  - CMAKE_BUILD_TYPE=Debug STRIDE_BOOST_ROOT=$BOOSTHOME STRIDE_BOOST_NO_SYSTEM_PATHS=ON make all
  - CMAKE_BUILD_TYPE=Debug STRIDE_BOOST_ROOT=$BOOSTHOME STRIDE_BOOST_NO_SYSTEM_PATHS=ON make test

after_success:
    - |
        cd ${TRAVIS_BUILD_DIR}
        if [[ "$STRIDE_GENERATE_COVERAGE" == "True" ]]; then
        lcov --directory . --capture --output-file coverage.info # capture coverage info
        lcov --remove coverage.info '/usr/*' 'main/resources/*' 'test/resources/*' "${HOME}/boost_1_66_0_cache/\*\*" --output-file coverage.info # filter out system + boost
        lcov --list coverage.info #debug info
        bash <(curl -s https://codecov.io/bash) -f coverage.info -t f7c8a447-9ce0-48b8-bbe5-b80a4f607cd8 || echo "Codecov did not collect coverage reports"
        fi

after_script:
 - |
    if [ -f ./cmake-build-debug/installed/tests/gtester_all.xml ]; then
    wget https://github.com/LEDfan/xunit-viewer/files/1819066/xunit-viewer.tar.gz
    tar -xf xunit-viewer.tar.gz
    ./xunit-viewer/bin/xunit-viewer --output=test_detail.html --results=./cmake-build-debug/installed/tests/gtester_all.xml
    git config --global user.email "bot@ledfan.be"
    git config --global user.name "LEDfan-bot"
    cp -r test_detail.html ../
    git remote add origin-pages https://${GH_TOKEN}@github.com/LEDfan/bachelorproef.git > /dev/null 2>&1
    git fetch origin-pages gh-pages
    git checkout gh-pages
    mkdir -p test_results/${TRAVIS_BRANCH}
    mv ../test_detail.html test_results/${TRAVIS_BRANCH}/${TRAVIS_JOB_NUMBER}-${BUILD_NAME}.html
    LINK="https://ledfan.github.io/Bachelorproef/test_results/${TRAVIS_BRANCH}/${TRAVIS_JOB_NUMBER}-${BUILD_NAME}.html"
    ./generate.py add $TRAVIS_BRANCH $TRAVIS_JOB_NUMBER $BUILD_NAME $LINK
    ./generate.py render > test-results.md
    git add test_results/* test-results.md test_results.json
    git commit -m "Publish test results @ $LINK"
    git push origin-pages gh-pages
    echo -e "\e[0;32mTest report can be viewed at $LINK\e[0m"
  # Arbitrarily chosen one platform for Debug build.
